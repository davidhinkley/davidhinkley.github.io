{"version":3,"file":"static/js/6.7101f120.chunk.js","mappings":"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","sources":["components/photos/PhotoFilter.js","hooks/useInfiniteScroll.js","pages/Gallery.js","components/ui/SkeletonLoader.js","components/photos/PhotoCard.js","components/photos/PhotoGrid.js","../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","../node_modules/@heroicons/react/24/outline/esm/HeartIcon.js","../node_modules/@heroicons/react/24/solid/esm/HeartIcon.js"],"sourcesContent":["import React from 'react';\n\nconst PhotoFilter = ({ categories, selectedCategory, onCategoryChange, onSearch }) => {\n  return (\n    <div className=\"mb-8 bg-white dark:bg-[#051E36] p-4 rounded-lg shadow-md\">\n      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0\">\n        <div className=\"flex flex-wrap items-center space-x-2\">\n          <span className=\"text-gray-700 dark:text-white font-medium\">Filter by:</span>\n          <button\n            onClick={() => onCategoryChange(null)}\n            className={`px-3 py-1 rounded-full text-sm font-medium ${\n              !selectedCategory\n                ? 'bg-primary-600 text-white'\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600'\n            }`}\n          >\n            All\n          </button>\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => onCategoryChange(category)}\n              className={`px-3 py-1 rounded-full text-sm font-medium ${\n                selectedCategory === category\n                  ? 'bg-primary-600 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600'\n              }`}\n            >\n              {category}\n            </button>\n          ))}\n        </div>\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            placeholder=\"Search photos...\"\n            className=\"input pr-10 dark:bg-gray-800 dark:text-white dark:border-gray-700\"\n            onChange={(e) => onSearch(e.target.value)}\n          />\n          <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n            <svg\n              className=\"h-5 w-5 text-gray-400 dark:text-gray-300\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PhotoFilter;","import { useState, useEffect, useCallback } from 'react';\n\nconst useInfiniteScroll = (callback, options = {}) => {\n  const { threshold = 100, initialPage = 1, enabled = true } = options;\n  const [isFetching, setIsFetching] = useState(false);\n  const [page, setPage] = useState(initialPage);\n  const [hasMore, setHasMore] = useState(true);\n\n  const handleScroll = useCallback(() => {\n    if (!enabled || isFetching || !hasMore) return;\n\n    // Check if we're near the bottom of the page\n    const scrollTop = window.scrollY || document.documentElement.scrollTop;\n    const scrollHeight = document.documentElement.scrollHeight;\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (scrollTop + clientHeight >= scrollHeight - threshold) {\n      setIsFetching(true);\n    }\n  }, [isFetching, hasMore, threshold, enabled]);\n\n  // Set up scroll event listener\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n\n  // Call the callback when isFetching changes to true\n  useEffect(() => {\n    if (!isFetching) return;\n\n    const fetchMore = async () => {\n      try {\n        const nextPage = page + 1;\n        const hasMoreData = await callback(nextPage);\n        \n        if (hasMoreData === false) {\n          setHasMore(false);\n        } else {\n          setPage(nextPage);\n        }\n      } catch (error) {\n        console.error('Error fetching more data:', error);\n      } finally {\n        setIsFetching(false);\n      }\n    };\n\n    fetchMore();\n  }, [isFetching, callback, page]);\n\n  // Reset function to start over\n  const reset = useCallback(() => {\n    setPage(initialPage);\n    setHasMore(true);\n    setIsFetching(false);\n  }, [initialPage]);\n\n  return { isFetching, hasMore, reset };\n};\n\nexport default useInfiniteScroll;","import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport PhotoGrid from '../components/photos/PhotoGrid';\nimport PhotoFilter from '../components/photos/PhotoFilter';\nimport { PhotoGridSkeleton } from '../components/ui/SkeletonLoader';\nimport { useAuth } from '../context/AuthContext';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\n\nconst Gallery = () => {\n  const { currentUser, isAuthenticated } = useAuth();\n  const [photos, setPhotos] = useState([]);\n  const [filteredPhotos, setFilteredPhotos] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [hasMorePhotos, setHasMorePhotos] = useState(true);\n  const PHOTOS_PER_PAGE = 12;\n\n  // Function to fetch photos with pagination\n  const fetchPhotos = useCallback(async (pageNum = 1) => {\n    try {\n      setLoading(true);\n      // In a real API, you would have pagination parameters\n      // For this example, we'll simulate pagination by slicing the data\n      const res = await axios.get('/api/photos');\n      const allPhotos = res.data;\n      \n      // Extract unique categories (only on first load)\n      if (pageNum === 1) {\n        const uniqueCategories = [...new Set(allPhotos.map(photo => photo.category))];\n        setCategories(uniqueCategories);\n      }\n      \n      // Simulate pagination\n      const start = 0;\n      const end = pageNum * PHOTOS_PER_PAGE;\n      const paginatedPhotos = allPhotos.slice(start, end);\n      \n      // Check if we've reached the end\n      const hasMore = paginatedPhotos.length < allPhotos.length;\n      \n      setPhotos(paginatedPhotos);\n      setHasMorePhotos(hasMore);\n      setLoading(false);\n      \n      return hasMore;\n    } catch (error) {\n      console.error('Error fetching photos:', error);\n      setLoading(false);\n      return false;\n    }\n  }, []);\n\n  // Load more photos when scrolling\n  const loadMorePhotos = useCallback(async (nextPage) => {\n    if (!hasMorePhotos) return false;\n    return await fetchPhotos(nextPage);\n  }, [fetchPhotos, hasMorePhotos]);\n\n  // Initialize infinite scroll\n  const { isFetching } = useInfiniteScroll(loadMorePhotos, {\n    threshold: 300,\n    initialPage: 1,\n    enabled: !loading && hasMorePhotos && !selectedCategory && !searchTerm\n  });\n\n  useEffect(() => {\n    fetchPhotos();\n  }, [fetchPhotos]);\n\n  useEffect(() => {\n    // Filter photos based on category and search term\n    let result = [...photos];\n    \n    if (selectedCategory) {\n      result = result.filter(photo => photo.category === selectedCategory);\n    }\n    \n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(\n        photo => \n          photo.title.toLowerCase().includes(term) || \n          photo.description.toLowerCase().includes(term) ||\n          photo.category.toLowerCase().includes(term)\n      );\n    }\n    \n    setFilteredPhotos(result);\n  }, [photos, selectedCategory, searchTerm]);\n\n  const handleCategoryChange = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleSearch = (term) => {\n    setSearchTerm(term);\n  };\n\n  const handleLike = async (id) => {\n    if (!isAuthenticated) {\n      alert('Please log in to like photos');\n      return;\n    }\n    \n    // Find the photo in our state\n    const photo = photos.find(p => p.id === id);\n    \n    // If already liked, don't do anything\n    if (photo && photo.liked) {\n      return;\n    }\n    \n    try {\n      const res = await axios.post(`/api/photos/${id}/like`);\n      \n      // Update both photos arrays\n      setPhotos(\n        photos.map((photo) =>\n          photo.id === id ? { \n            ...photo, \n            likes: res.data.likes,\n            liked: true\n          } : photo\n        )\n      );\n      \n      setFilteredPhotos(\n        filteredPhotos.map((photo) =>\n          photo.id === id ? { \n            ...photo, \n            likes: res.data.likes,\n            liked: true\n          } : photo\n        )\n      );\n    } catch (error) {\n      console.error('Error liking photo:', error);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`/api/photos/${id}`);\n      \n      // Remove the deleted photo from both arrays\n      setPhotos(photos.filter(photo => photo.id !== id));\n      setFilteredPhotos(filteredPhotos.filter(photo => photo.id !== id));\n    } catch (error) {\n      console.error('Error deleting photo:', error);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"mb-8\">\n        <h1 className=\"text-4xl galleria-title mb-2\">Galleria</h1>\n        <p className=\"text-dark-text-secondary\">Browse and discover amazing photos from our community</p>\n      </div>\n\n      <PhotoFilter\n        categories={categories}\n        selectedCategory={selectedCategory}\n        onCategoryChange={handleCategoryChange}\n        onSearch={handleSearch}\n      />\n\n      {loading ? (\n        <PhotoGridSkeleton count={12} />\n      ) : (\n        <>\n          <div className=\"mb-4 text-dark-text-secondary\">\n            Showing {filteredPhotos.length} {filteredPhotos.length === 1 ? 'photo' : 'photos'}\n            {selectedCategory && <span> in <span className=\"text-primary-400 font-semibold\">{selectedCategory}</span></span>}\n            {searchTerm && <span> matching \"<span className=\"text-primary-400 font-semibold\">{searchTerm}</span>\"</span>}\n          </div>\n          <PhotoGrid \n            photos={filteredPhotos} \n            onLike={handleLike} \n            onDelete={handleDelete}\n            currentUserId={currentUser?.id}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Gallery;","import React from 'react';\n\nexport const PhotoCardSkeleton = () => {\n  return (\n    <div className=\"card group bg-white dark:bg-gray-800 shadow-md rounded-lg overflow-hidden transition-colors duration-200 animate-pulse\">\n      <div className=\"relative overflow-hidden h-64 bg-gray-200 dark:bg-gray-700\"></div>\n      <div className=\"p-4\">\n        <div className=\"flex justify-between items-start\">\n          <div className=\"w-3/4\">\n            <div className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded mb-2\"></div>\n            <div className=\"h-4 w-1/2 bg-gray-200 dark:bg-gray-700 rounded mb-1\"></div>\n          </div>\n          <div className=\"h-6 w-6 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const PhotoGridSkeleton = ({ count = 8 }) => {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n      {Array(count).fill(0).map((_, index) => (\n        <PhotoCardSkeleton key={index} />\n      ))}\n    </div>\n  );\n};\n\nexport default PhotoGridSkeleton;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { HeartIcon, TrashIcon } from '@heroicons/react/24/outline';\nimport { HeartIcon as HeartIconSolid } from '@heroicons/react/24/solid';\n\nconst PhotoCard = ({ photo, onLike, onDelete, currentUserId }) => {\n  const { id, title, path, likes, category, attribution, userId } = photo;\n  const [imageOrientation, setImageOrientation] = useState('square');\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  const isOwner = currentUserId && userId === currentUserId;\n\n  // Function to determine image orientation\n  const checkImageOrientation = (img) => {\n    if (img.naturalWidth && img.naturalHeight) {\n      // Calculate aspect ratio\n      const aspectRatio = img.naturalWidth / img.naturalHeight;\n      \n      // Define thresholds for orientation\n      if (aspectRatio < 0.9) {\n        return 'portrait';\n      } else if (aspectRatio > 1.1) {\n        return 'landscape';\n      } else {\n        return 'square';\n      }\n    }\n    return 'square'; // Default\n  };\n\n  // Handle image load\n  const handleImageLoad = (e) => {\n    const orientation = checkImageOrientation(e.target);\n    setImageOrientation(orientation);\n    setImageLoaded(true);\n    setImageError(false);\n  };\n\n  // Handle image error\n  const handleImageError = () => {\n    setImageError(true);\n    setImageLoaded(true); // Stop showing loading spinner\n  };\n\n  // Handle delete\n  const handleDelete = (e) => {\n    e.stopPropagation();\n    if (window.confirm('Are you sure you want to delete this photo? This action cannot be undone.')) {\n      onDelete(id);\n    }\n  };\n\n  return (\n    <div className=\"card group bg-white dark:bg-gray-800 shadow-md rounded-lg overflow-hidden transition-colors duration-200\">\n      <div className=\"relative overflow-hidden h-64\">\n        <Link to={`/photos/${id}`} className=\"block w-full h-full cursor-pointer z-10 relative\">\n          {!imageError ? (\n            <img\n              src={path}\n              alt={title}\n              className={`\n                transition-transform duration-300 group-hover:scale-105\n                ${imageOrientation === 'portrait' ? 'w-full h-auto object-cover object-center' : ''}\n                ${imageOrientation === 'landscape' ? 'h-full w-auto object-cover object-center' : ''}\n                ${imageOrientation === 'square' ? 'w-full h-full object-contain' : ''}\n                ${!imageLoaded ? 'opacity-0' : 'opacity-100'}\n              `}\n              style={{ \n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n              }}\n              onLoad={handleImageLoad}\n              onError={handleImageError}\n            />\n          ) : (\n            <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-gray-100 dark:bg-gray-700\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 text-gray-400 mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n              <p className=\"text-sm text-gray-500 dark:text-gray-300\">Image not available</p>\n            </div>\n          )}\n          {!imageLoaded && !imageError && (\n            <div className=\"absolute inset-0 flex items-center justify-center bg-white dark:bg-gray-800\">\n              <div className=\"w-8 h-8 border-t-4 border-primary-600 border-solid rounded-full animate-spin\"></div>\n            </div>\n          )}\n        </Link>\n        <Link to={`/photos/${id}`} className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-opacity duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100 z-20\">\n          <span className=\"btn btn-primary px-4 py-2 rounded-md bg-primary-600 text-white\">\n            View Details\n          </span>\n        </Link>\n        \n        {/* Trash can icon for photo owner */}\n        {isOwner && onDelete && (\n          <button\n            onClick={handleDelete}\n            className=\"absolute top-2 right-2 p-2 bg-red-600 bg-opacity-70 hover:bg-opacity-100 text-white rounded-full transition-opacity duration-200 opacity-0 group-hover:opacity-100 z-30\"\n            title=\"Delete photo\"\n          >\n            <TrashIcon className=\"h-5 w-5\" />\n          </button>\n        )}\n      </div>\n      <div className=\"p-4\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-100 mb-1\">\n              <Link to={`/photos/${id}`} className=\"hover:text-primary-600 dark:hover:text-primary-400\">\n                {title}\n              </Link>\n            </h3>\n            <div>\n              <span className=\"inline-block bg-gray-200 dark:bg-gray-700 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 dark:text-gray-300 mr-2 mb-1\">\n                #{category}\n              </span>\n              {attribution && (\n                <div className=\"text-xs text-gray-500 dark:text-gray-400 mb-2\">\n                  {attribution}\n                </div>\n              )}\n            </div>\n          </div>\n          <button\n            onClick={() => onLike(id)}\n            className=\"flex items-center text-gray-500 dark:text-gray-400 hover:text-red-500 dark:hover:text-red-400\"\n          >\n            {photo.liked ? (\n              <HeartIconSolid className=\"h-6 w-6 text-red-500 dark:text-red-400\" />\n            ) : (\n              <HeartIcon className=\"h-6 w-6\" />\n            )}\n            <span className=\"ml-1\">{likes}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PhotoCard;","import React from 'react';\nimport PhotoCard from './PhotoCard';\n\nconst PhotoGrid = ({ photos, onLike, onDelete, currentUserId }) => {\n  if (!photos || photos.length === 0) {\n    return (\n      <div className=\"text-center py-10\">\n        <h3 className=\"text-lg font-medium text-gray-500\">No photos found</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n      {photos.map((photo) => (\n        <PhotoCard \n          key={photo.id} \n          photo={photo} \n          onLike={onLike} \n          onDelete={onDelete} \n          currentUserId={currentUserId} \n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PhotoGrid;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction HeartIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(HeartIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction HeartIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m11.645 20.91-.007-.003-.022-.012a15.247 15.247 0 0 1-.383-.218 25.18 25.18 0 0 1-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0 1 12 5.052 5.5 5.5 0 0 1 16.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 0 1-4.244 3.17 15.247 15.247 0 0 1-.383.219l-.022.012-.007.004-.003.001a.752.752 0 0 1-.704 0l-.003-.001Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(HeartIcon);\nexport default ForwardRef;"],"names":["_ref","categories","selectedCategory","onCategoryChange","onSearch","_jsx","className","children","_jsxs","onClick","map","category","type","placeholder","onChange","e","target","value","xmlns","viewBox","fill","fillRule","d","clipRule","callback","options","arguments","length","undefined","threshold","initialPage","enabled","isFetching","setIsFetching","useState","page","setPage","hasMore","setHasMore","handleScroll","useCallback","scrollTop","window","scrollY","document","documentElement","scrollHeight","clientHeight","useEffect","addEventListener","removeEventListener","async","nextPage","error","console","fetchMore","reset","Gallery","currentUser","isAuthenticated","useAuth","photos","setPhotos","filteredPhotos","setFilteredPhotos","setCategories","setSelectedCategory","searchTerm","setSearchTerm","loading","setLoading","hasMorePhotos","setHasMorePhotos","fetchPhotos","pageNum","allPhotos","axios","get","data","uniqueCategories","Set","photo","start","end","paginatedPhotos","slice","loadMorePhotos","useInfiniteScroll","result","filter","term","toLowerCase","title","includes","description","PhotoFilter","PhotoGridSkeleton","count","_Fragment","PhotoGrid","onLike","alert","find","p","id","liked","res","post","likes","onDelete","delete","currentUserId","PhotoCardSkeleton","Array","_","index","path","attribution","userId","imageOrientation","setImageOrientation","imageLoaded","setImageLoaded","imageError","setImageError","isOwner","Link","to","stroke","strokeLinecap","strokeLinejoin","strokeWidth","src","alt","style","position","left","top","transform","onLoad","orientation","img","naturalWidth","naturalHeight","aspectRatio","checkImageOrientation","onError","handleImageError","stopPropagation","confirm","TrashIcon","HeartIconSolid","HeartIcon","PhotoCard","svgRef","titleId","props","React","Object","assign","ref"],"sourceRoot":""}