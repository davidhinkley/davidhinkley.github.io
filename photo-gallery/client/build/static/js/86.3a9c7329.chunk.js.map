{"version":3,"file":"static/js/86.3a9c7329.chunk.js","mappings":"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","sources":["pages/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { CloudArrowUpIcon } from '@heroicons/react/24/outline';\nimport imageCompression from 'browser-image-compression';\n\nconst Upload = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    category: '',\n    attribution: '',\n  });\n  const [showAttribution, setShowAttribution] = useState(false);\n  const [file, setFile] = useState(null);\n  const [originalFile, setOriginalFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [compressionInfo, setCompressionInfo] = useState(null);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleFileChange = async (e) => {\n    const selectedFile = e.target.files[0];\n    \n    if (selectedFile) {\n      setOriginalFile(selectedFile);\n      \n      // Create preview immediately for better UX\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(selectedFile);\n      \n      try {\n        // Set compression options\n        const options = {\n          maxSizeMB: 1, // Max file size in MB\n          maxWidthOrHeight: 1920, // Max width/height in pixels\n          useWebWorker: true,\n          initialQuality: 0.8, // Initial quality setting (0-1)\n        };\n        \n        // Show loading state\n        setLoading(true);\n        \n        // Compress the image\n        const compressedFile = await imageCompression(selectedFile, options);\n        \n        // Calculate compression ratio\n        const originalSizeMB = selectedFile.size / (1024 * 1024);\n        const compressedSizeMB = compressedFile.size / (1024 * 1024);\n        const savingsPercent = ((originalSizeMB - compressedSizeMB) / originalSizeMB * 100).toFixed(1);\n        \n        setCompressionInfo({\n          originalSize: originalSizeMB.toFixed(2),\n          compressedSize: compressedSizeMB.toFixed(2),\n          savings: savingsPercent\n        });\n        \n        // Set the compressed file for upload\n        setFile(compressedFile);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error compressing image:', error);\n        // Fallback to original file if compression fails\n        setFile(selectedFile);\n        setError('Image compression failed. The original image will be used.');\n        setLoading(false);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!file) {\n      setError('Please select a file to upload');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    const data = new FormData();\n    data.append('photo', file);\n    data.append('title', formData.title);\n    data.append('description', formData.description);\n    data.append('category', formData.category);\n    if (showAttribution && formData.attribution) {\n      data.append('attribution', formData.attribution);\n    }\n    \n    try {\n      const res = await axios.post('/api/photos', data, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      navigate(`/photos/${res.data.id}`);\n    } catch (error) {\n      console.error('Error uploading photo:', error);\n      setError(error.response?.data?.message || 'Error uploading photo');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">Upload Photo</h1>\n      \n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n        <div className=\"p-6\">\n          <div className=\"mb-6\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"photo\">\n              Photo\n            </label>\n            <div className=\"border-2 border-dashed border-gray-300 rounded-md p-6 text-center\">\n              {preview ? (\n                <div className=\"mb-4\">\n                  <img\n                    src={preview}\n                    alt=\"Preview\"\n                    className=\"max-h-64 mx-auto\"\n                  />\n                  {compressionInfo && (\n                    <div className=\"mt-2 text-sm text-gray-600 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 p-2 rounded\">\n                      <p>Original: {compressionInfo.originalSize} MB</p>\n                      <p>Compressed: {compressionInfo.compressedSize} MB</p>\n                      <p>Saved: {compressionInfo.savings}% of original size</p>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"text-gray-500 mb-4\">\n                  <CloudArrowUpIcon className=\"h-12 w-12 mx-auto text-gray-400\" />\n                  <p>Drag and drop your photo here, or click to select</p>\n                  <p className=\"text-xs mt-2\">Images will be automatically compressed for optimal performance</p>\n                </div>\n              )}\n              <input\n                type=\"file\"\n                id=\"photo\"\n                name=\"photo\"\n                accept=\"image/*\"\n                onChange={handleFileChange}\n                className=\"hidden\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => document.getElementById('photo').click()}\n                className=\"btn btn-secondary\"\n              >\n                {preview ? 'Change Photo' : 'Select Photo'}\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"title\">\n              Title\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={formData.title}\n              onChange={handleChange}\n              className=\"input\"\n              required\n            />\n          </div>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"category\">\n              Category\n            </label>\n            <input\n              type=\"text\"\n              id=\"category\"\n              name=\"category\"\n              value={formData.category}\n              onChange={handleChange}\n              className=\"input\"\n              placeholder=\"e.g. nature, portrait, architecture\"\n            />\n          </div>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"description\">\n              Description\n            </label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              className=\"input h-32\"\n              placeholder=\"Tell us about your photo...\"\n            ></textarea>\n          </div>\n          \n          <div className=\"mb-4\">\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"showAttribution\"\n                checked={showAttribution}\n                onChange={() => setShowAttribution(!showAttribution)}\n                className=\"mr-2\"\n              />\n              <label className=\"text-gray-700 text-sm font-bold\" htmlFor=\"showAttribution\">\n                Attribution\n              </label>\n            </div>\n          </div>\n          \n          {showAttribution && (\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"attribution\">\n                Attribution\n              </label>\n              <textarea\n                id=\"attribution\"\n                name=\"attribution\"\n                value={formData.attribution}\n                onChange={handleChange}\n                className=\"input h-20\"\n                placeholder=\"Credit the original creator or source of this image...\"\n              ></textarea>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"bg-gray-50 px-6 py-4\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary w-full\"\n            disabled={loading}\n          >\n            {loading ? (\n              <span className=\"flex items-center justify-center\">\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Uploading...\n              </span>\n            ) : (\n              'Upload Photo'\n            )}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Upload;"],"names":["Upload","navigate","useNavigate","formData","setFormData","useState","title","description","category","attribution","showAttribution","setShowAttribution","file","setFile","originalFile","setOriginalFile","preview","setPreview","loading","setLoading","error","setError","compressionInfo","setCompressionInfo","handleChange","e","target","name","value","_jsxs","className","children","_jsx","onSubmit","async","preventDefault","data","FormData","append","res","axios","post","headers","id","_error$response","_error$response$data","console","response","message","htmlFor","src","alt","originalSize","compressedSize","savings","CloudArrowUpIcon","type","accept","onChange","selectedFile","files","reader","FileReader","onloadend","result","readAsDataURL","options","maxSizeMB","maxWidthOrHeight","useWebWorker","initialQuality","compressedFile","imageCompression","originalSizeMB","size","compressedSizeMB","savingsPercent","toFixed","onClick","document","getElementById","click","required","placeholder","checked","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d"],"sourceRoot":""}