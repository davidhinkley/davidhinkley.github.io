{"version":3,"file":"static/js/934.919ec83f.chunk.js","mappings":"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","sources":["pages/BackupManagerNew.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTheme } from '../context/ThemeContext';\nimport axios from '../utils/api';\n\nconst BackupManagerNew = () => {\n  const [backupName, setBackupName] = useState('');\n  const [backups, setBackups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const { darkMode } = useTheme();\n  \n  // Fetch backups when component mounts\n  useEffect(() => {\n    fetchBackups();\n  }, []);\n\n  const fetchBackups = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/backups');\n      setBackups(response.data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching backups:', err);\n      setError('Failed to load backups. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBackupNameChange = (e) => {\n    setBackupName(e.target.value);\n  };\n\n  const handleCreateBackup = async () => {\n    try {\n      setIsCreating(true);\n      await axios.post('/api/backups', { name: backupName || 'manual' });\n      setBackupName('');\n      // Refresh the backup list\n      await fetchBackups();\n      alert('Backup created successfully!');\n    } catch (err) {\n      console.error('Error creating backup:', err);\n      alert('Failed to create backup. Please try again.');\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const handleRestoreBackup = async (backupId) => {\n    if (window.confirm('Are you sure you want to restore this backup? This will replace your current data.')) {\n      try {\n        await axios.post(`/api/backups/restore/${backupId}`);\n        alert('Backup restored successfully!');\n      } catch (err) {\n        console.error('Error restoring backup:', err);\n        alert('Failed to restore backup. Please try again.');\n      }\n    }\n  };\n\n  const handleDeleteBackup = async (backupId) => {\n    if (window.confirm('Are you sure you want to delete this backup? This action cannot be undone.')) {\n      try {\n        await axios.delete(`/api/backups/${backupId}`);\n        // Refresh the backup list\n        await fetchBackups();\n        alert('Backup deleted successfully!');\n      } catch (err) {\n        console.error('Error deleting backup:', err);\n        alert('Failed to delete backup. Please try again.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 py-8 bg-white dark:bg-gray-900 text-gray-900 dark:text-white\">\n      <h1 className=\"text-3xl font-bold mb-6 text-gray-900 dark:text-white\">Backup Manager</h1>\n      \n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 mb-6 border border-gray-200 dark:border-gray-700\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">Create New Backup</h2>\n        \n        <div className=\"mb-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2 text-gray-700 dark:text-gray-300\">Backup name (optional)</label>\n            <div className=\"flex\">\n              <input \n                type=\"text\"\n                value={backupName}\n                onChange={handleBackupNameChange}\n                placeholder=\"Enter a name for this backup\"\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                disabled={isCreating}\n              />\n              <button \n                onClick={handleCreateBackup}\n                className={`px-4 py-2 bg-blue-600 text-white rounded-r-md ${isCreating ? 'opacity-70 cursor-not-allowed' : 'hover:bg-blue-700'}`}\n                disabled={isCreating}\n              >\n                {isCreating ? 'Creating...' : 'Create Backup'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-700\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">Available Backups</h2>\n        \n        {loading ? (\n          <p className=\"text-center py-4 text-gray-700 dark:text-gray-300\">Loading backups...</p>\n        ) : error ? (\n          <p className=\"text-red-600 dark:text-red-400\">{error}</p>\n        ) : backups.length === 0 ? (\n          <p className=\"italic text-gray-700 dark:text-gray-300\">No backups found. Create your first backup above.</p>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse table-fixed\">\n              <thead>\n                <tr className=\"border-b border-gray-200 dark:border-gray-700\">\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[40%]\">Name</th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[25%]\">Created</th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[15%]\">Size</th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-[20%]\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                {backups.map((backup) => (\n                  <tr key={backup.id}>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-gray-900 dark:text-white max-w-[250px] overflow-hidden\">\n                      <div className=\"truncate\" title={backup.id}>\n                        {backup.id.length > 30 ? `${backup.id.substring(0, 30)}...` : backup.id}\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-gray-900 dark:text-white\">{backup.createdFormatted}</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-gray-900 dark:text-white\">{backup.sizeFormatted}</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-gray-900 dark:text-white min-w-[150px]\">\n                      <div className=\"flex space-x-4\">\n                        <button \n                          onClick={() => handleRestoreBackup(backup.id)}\n                          className=\"text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 font-medium\"\n                        >\n                          Restore\n                        </button>\n                        <button \n                          onClick={() => handleDeleteBackup(backup.id)}\n                          className=\"text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-300 font-medium\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BackupManagerNew;"],"names":["BackupManagerNew","backupName","setBackupName","useState","backups","setBackups","loading","setLoading","error","setError","isCreating","setIsCreating","darkMode","useTheme","useEffect","fetchBackups","async","response","axios","get","data","err","console","_jsxs","className","children","_jsx","type","value","onChange","e","target","placeholder","disabled","onClick","post","name","alert","length","map","backup","title","id","substring","createdFormatted","sizeFormatted","window","confirm","backupId","handleRestoreBackup","delete","handleDeleteBackup"],"sourceRoot":""}